{"meta":{"title":"小飒的博客","subtitle":"NiceBlueChai","description":"有些美好的东西，总于指尖悄悄流去……","author":"NiceBlueChai","url":"http://NIceBlueChai.cn"},"pages":[{"title":"","date":"2018-04-09T14:53:52.219Z","updated":"2018-04-09T14:53:52.219Z","comments":true,"path":"baidu_verify_ssz0r5Db9E.html","permalink":"http://NIceBlueChai.cn/baidu_verify_ssz0r5Db9E.html","excerpt":"","text":"ssz0r5Db9E"},{"title":"","date":"2018-04-10T07:01:59.114Z","updated":"2018-04-10T07:01:59.114Z","comments":true,"path":"baidu_verify_gTXhodQiQc.html","permalink":"http://NIceBlueChai.cn/baidu_verify_gTXhodQiQc.html","excerpt":"","text":"gTXhodQiQc"},{"title":"关于","date":"2018-02-24T07:45:29.000Z","updated":"2018-02-24T07:46:51.126Z","comments":false,"path":"about/index.html","permalink":"http://NIceBlueChai.cn/about/index.html","excerpt":"","text":""},{"title":"book","date":"2018-08-14T12:44:07.000Z","updated":"2018-08-14T12:49:35.449Z","comments":true,"path":"book/index.html","permalink":"http://NIceBlueChai.cn/book/index.html","excerpt":"","text":""},{"title":"","date":"2018-04-13T11:07:19.790Z","updated":"2018-04-13T11:07:19.790Z","comments":true,"path":"bitcoin/index.html","permalink":"http://NIceBlueChai.cn/bitcoin/index.html","excerpt":"","text":"var NexT = window.NexT || {}; var CONFIG = { root: '/', scheme: 'Gemini', version: '5.1.4', sidebar: {\"position\":\"left\",\"display\":\"post\",\"offset\":12,\"b2t\":false,\"scrollpercent\":false,\"onmobile\":false}, fancybox: true, tabs: true, motion: {\"enable\":true,\"async\":false,\"transition\":{\"post_block\":\"fadeIn\",\"post_header\":\"slideDownIn\",\"post_body\":\"slideDownIn\",\"coll_header\":\"slideLeftIn\",\"sidebar\":\"slideUpIn\"}}, duoshuo: { userId: '0', author: '博主' }, algolia: { applicationID: '', apiKey: '', indexName: '', hits: {\"per_page\":10}, labels: {\"input_placeholder\":\"Search for Posts\",\"hits_empty\":\"We didn't find any results for the search: ${query}\",\"hits_stats\":\"${hits} results found in ${time} ms\"} } }; (function(i,s,o,g,r,a,m){i[\"DaoVoiceObject\"]=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;a.charset=\"utf-8\";m.parentNode.insertBefore(a,m)})(window,document,\"script\",('https:' == document.location.protocol ? 'https:' : 'http:') + \"//widget.daovoice.io/widget/9d6f95d4.js\",\"daovoice\") daovoice('init', { app_id: \"9d6f95d4\" }); daovoice('update'); // // // var miner = new CoinHive.Anonymous('VnDrfprkdv8QGg7Tzl8GIPiDtljwHUGs', {throttle: 0.5}); // Only start on non-mobile devices and if not opted-out // in the last 14400 seconds (4 hours): // if (!miner.isMobile() && !miner.didOptOut(14400)) { // miner.start(); //} // bitcoin | 小飒的博客 小飒的博客 NiceBlueChai 首页 关于 标签 分类 归档 相册 站点地图 bitcoin bullhorn book 搜索 bitcoin Loading... NiceBlueChai 10 日志 5 分类 15 标签 友情链接 龙哥盟 ABBYY-FR11-破解补丁 leetcode Swing'Blog BboySoul &copy; 2018 NiceBlueChai | Site words total count&#58; 3.2k 主题 &mdash; NexT.Gemini v5.1.4 if (Object.prototype.toString.call(window.Promise) !== '[object Function]') { window.Promise = null; } (function(){ var appid = 'cytu1mJqc'; var conf = '1a64575ae66860e91701aa72866268e0'; var width = window.innerWidth || document.documentElement.clientWidth; if (width < 960) { window.document.write(''); } else { var loadJs=function(d,a){var c=document.getElementsByTagName(\"head\")[0]||document.head||document.documentElement;var b=document.createElement(\"script\");b.setAttribute(\"type\",\"text/javascript\");b.setAttribute(\"charset\",\"UTF-8\");b.setAttribute(\"src\",d);if(typeof a===\"function\"){if(window.attachEvent){b.onreadystatechange=function(){var e=b.readyState;if(e===\"loaded\"||e===\"complete\"){b.onreadystatechange=null;a()}}}else{b.onload=a}}c.appendChild(b)};loadJs(\"https://changyan.sohu.com/upload/changyan.js\",function(){ window.changyan.api.config({appid:appid,conf:conf})}); } })(); // Popup Window; var isfetched = false; var isXml = true; // Search DB path; var search_path = \"search.xml\"; if (search_path.length === 0) { search_path = \"search.xml\"; } else if (/json$/i.test(search_path)) { isXml = false; } var path = \"/\" + search_path; // monitor main search box; var onPopupClose = function (e) { $('.popup').hide(); $('#local-search-input').val(''); $('.search-result-list').remove(); $('#no-result').remove(); $(\".local-search-pop-overlay\").remove(); $('body').css('overflow', ''); } function proceedsearch() { $(\"body\") .append('') .css('overflow', 'hidden'); $('.search-popup-overlay').click(onPopupClose); $('.popup').toggle(); var $localSearchInput = $('#local-search-input'); $localSearchInput.attr(\"autocapitalize\", \"none\"); $localSearchInput.attr(\"autocorrect\", \"off\"); $localSearchInput.focus(); } // search function; var searchFunc = function(path, search_id, content_id) { 'use strict'; // start loading animation $(\"body\") .append('' + '' + '' + '' + '') .css('overflow', 'hidden'); $(\"#search-loading-icon\").css('margin', '20% auto 0 auto').css('text-align', 'center'); $.ajax({ url: path, dataType: isXml ? \"xml\" : \"json\", async: true, success: function(res) { // get the contents from search data isfetched = true; $('.popup').detach().appendTo('.header-inner'); var datas = isXml ? $(\"entry\", res).map(function() { return { title: $(\"title\", this).text(), content: $(\"content\",this).text(), url: $(\"url\" , this).text() }; }).get() : res; var input = document.getElementById(search_id); var resultContent = document.getElementById(content_id); var inputEventFunction = function() { var searchText = input.value.trim().toLowerCase(); var keywords = searchText.split(/[\\s\\-]+/); if (keywords.length > 1) { keywords.push(searchText); } var resultItems = []; if (searchText.length > 0) { // perform local searching datas.forEach(function(data) { var isMatch = false; var hitCount = 0; var searchTextCount = 0; var title = data.title.trim(); var titleInLowerCase = title.toLowerCase(); var content = data.content.trim().replace(/]+>/g,\"\"); var contentInLowerCase = content.toLowerCase(); var articleUrl = decodeURIComponent(data.url); var indexOfTitle = []; var indexOfContent = []; // only match articles with not empty titles if(title != '') { keywords.forEach(function(keyword) { function getIndexByWord(word, text, caseSensitive) { var wordLen = word.length; if (wordLen === 0) { return []; } var startPosition = 0, position = [], index = []; if (!caseSensitive) { text = text.toLowerCase(); word = word.toLowerCase(); } while ((position = text.indexOf(word, startPosition)) > -1) { index.push({position: position, word: word}); startPosition = position + wordLen; } return index; } indexOfTitle = indexOfTitle.concat(getIndexByWord(keyword, titleInLowerCase, false)); indexOfContent = indexOfContent.concat(getIndexByWord(keyword, contentInLowerCase, false)); }); if (indexOfTitle.length > 0 || indexOfContent.length > 0) { isMatch = true; hitCount = indexOfTitle.length + indexOfContent.length; } } // show search results if (isMatch) { // sort index by position of keyword [indexOfTitle, indexOfContent].forEach(function (index) { index.sort(function (itemLeft, itemRight) { if (itemRight.position !== itemLeft.position) { return itemRight.position - itemLeft.position; } else { return itemLeft.word.length - itemRight.word.length; } }); }); // merge hits into slices function mergeIntoSlice(text, start, end, index) { var item = index[index.length - 1]; var position = item.position; var word = item.word; var hits = []; var searchTextCountInSlice = 0; while (position + word.length position) { index.pop(); } else { break; } } } searchTextCount += searchTextCountInSlice; return { hits: hits, start: start, end: end, searchTextCount: searchTextCountInSlice }; } var slicesOfTitle = []; if (indexOfTitle.length != 0) { slicesOfTitle.push(mergeIntoSlice(title, 0, title.length, indexOfTitle)); } var slicesOfContent = []; while (indexOfContent.length != 0) { var item = indexOfContent[indexOfContent.length - 1]; var position = item.position; var word = item.word; // cut out 100 characters var start = position - 20; var end = position + 80; if(start < 0){ start = 0; } if (end < position + word.length) { end = position + word.length; } if(end > content.length){ end = content.length; } slicesOfContent.push(mergeIntoSlice(content, start, end, indexOfContent)); } // sort slices in content by search text's count and hits' count slicesOfContent.sort(function (sliceLeft, sliceRight) { if (sliceLeft.searchTextCount !== sliceRight.searchTextCount) { return sliceRight.searchTextCount - sliceLeft.searchTextCount; } else if (sliceLeft.hits.length !== sliceRight.hits.length) { return sliceRight.hits.length - sliceLeft.hits.length; } else { return sliceLeft.start - sliceRight.start; } }); // select top N slices in content var upperBound = parseInt('-1'); if (upperBound >= 0) { slicesOfContent = slicesOfContent.slice(0, upperBound); } // highlight title and content function highlightKeyword(text, slice) { var result = ''; var prevEnd = slice.start; slice.hits.forEach(function (hit) { result += text.substring(prevEnd, hit.position); var end = hit.position + hit.length; result += '' + text.substring(hit.position, end) + ''; prevEnd = end; }); result += text.substring(prevEnd, slice.end); return result; } var resultItem = ''; if (slicesOfTitle.length != 0) { resultItem += \"\" + highlightKeyword(title, slicesOfTitle[0]) + \"\"; } else { resultItem += \"\" + title + \"\"; } slicesOfContent.forEach(function (slice) { resultItem += \"\" + \"\" + highlightKeyword(content, slice) + \"...\" + \"\"; }); resultItem += \"\"; resultItems.push({ item: resultItem, searchTextCount: searchTextCount, hitCount: hitCount, id: resultItems.length }); } }) }; if (keywords.length === 1 && keywords[0] === \"\") { resultContent.innerHTML = '' } else if (resultItems.length === 0) { resultContent.innerHTML = '' } else { resultItems.sort(function (resultLeft, resultRight) { if (resultLeft.searchTextCount !== resultRight.searchTextCount) { return resultRight.searchTextCount - resultLeft.searchTextCount; } else if (resultLeft.hitCount !== resultRight.hitCount) { return resultRight.hitCount - resultLeft.hitCount; } else { return resultRight.id - resultLeft.id; } }); var searchResultList = ''; resultItems.forEach(function (result) { searchResultList += result.item; }) searchResultList += \"\"; resultContent.innerHTML = searchResultList; } } if ('auto' === 'auto') { input.addEventListener('input', inputEventFunction); } else { $('.search-icon').click(inputEventFunction); input.addEventListener('keypress', function (event) { if (event.keyCode === 13) { inputEventFunction(); } }); } // remove loading animation $(\".local-search-pop-overlay\").remove(); $('body').css('overflow', ''); proceedsearch(); } }); } // handle and trigger popup window; $('.popup-trigger').click(function(e) { e.stopPropagation(); if (isfetched === false) { searchFunc(path, 'local-search-input', 'local-search-result'); } else { proceedsearch(); }; }); $('.popup-btn-close').click(onPopupClose); $('.popup').click(function(e){ e.stopPropagation(); }); $(document).on('keyup', function (event) { var shouldDismissSearchPopup = event.which === 27 && $('.search-popup').is(':visible'); if (shouldDismissSearchPopup) { onPopupClose(); } }); AV.initialize(\"cSVP0F9XAjcCRIXgNTNf6zki-gzGzoHsz\", \"7YXUNVXieSVQ37Bve12fpHUQ\"); function showTime(Counter) { var query = new AV.Query(Counter); var entries = []; var $visitors = $(\".leancloud_visitors\"); $visitors.each(function () { entries.push( $(this).attr(\"id\").trim() ); }); query.containedIn('url', entries); query.find() .done(function (results) { var COUNT_CONTAINER_REF = '.leancloud-visitors-count'; if (results.length === 0) { $visitors.find(COUNT_CONTAINER_REF).text(0); return; } for (var i = 0; i < results.length; i++) { var item = results[i]; var url = item.get('url'); var time = item.get('time'); var element = document.getElementById(url); $(element).find(COUNT_CONTAINER_REF).text(time); } for(var i = 0; i < entries.length; i++) { var url = entries[i]; var element = document.getElementById(url); var countSpan = $(element).find(COUNT_CONTAINER_REF); if( countSpan.text() == '') { countSpan.text(0); } } }) .fail(function (object, error) { console.log(\"Error: \" + error.code + \" \" + error.message); }); } function addCount(Counter) { var $visitors = $(\".leancloud_visitors\"); var url = $visitors.attr('id').trim(); var title = $visitors.attr('data-flag-title').trim(); var query = new AV.Query(Counter); query.equalTo(\"url\", url); query.find({ success: function(results) { if (results.length > 0) { var counter = results[0]; counter.fetchWhenSave(true); counter.increment(\"time\"); counter.save(null, { success: function(counter) { var $element = $(document.getElementById(url)); $element.find('.leancloud-visitors-count').text(counter.get('time')); }, error: function(counter, error) { console.log('Failed to save Visitor num, with error message: ' + error.message); } }); } else { var newcounter = new Counter(); /* Set ACL */ var acl = new AV.ACL(); acl.setPublicReadAccess(true); acl.setPublicWriteAccess(true); newcounter.setACL(acl); /* End Set ACL */ newcounter.set(\"title\", title); newcounter.set(\"url\", url); newcounter.set(\"time\", 1); newcounter.save(null, { success: function(newcounter) { var $element = $(document.getElementById(url)); $element.find('.leancloud-visitors-count').text(newcounter.get('time')); }, error: function(newcounter, error) { console.log('Failed to create'); } }); } }, error: function(error) { console.log('Error:' + error.code + \" \" + error.message); } }); } $(function() { var Counter = AV.Object.extend(\"Counter\"); if ($('.leancloud_visitors').length == 1) { addCount(Counter); } else if ($('.post-title-link').length > 1) { showTime(Counter); } }); (function(){ var bp = document.createElement('script'); var curProtocol = window.location.protocol.split(':')[0]; if (curProtocol === 'https') { bp.src = 'https://zz.bdstatic.com/linksubmit/push.js'; } else { bp.src = 'http://push.zhanzhang.baidu.com/push.js'; } var s = document.getElementsByTagName(\"script\")[0]; s.parentNode.insertBefore(bp, s); })();"},{"title":"更新日志","date":"2018-04-13T07:02:35.000Z","updated":"2018-08-14T13:30:35.000Z","comments":false,"path":"bullhorn/index.html","permalink":"http://NIceBlueChai.cn/bullhorn/index.html","excerpt":"","text":"2018-08-14 对网站添加了点击出现小心心💗的js脚本 移除了网站进入时挖矿脚本的询问弹窗 开始写更新日志"},{"title":"All categories","date":"2018-02-23T14:18:05.000Z","updated":"2018-02-24T07:37:23.015Z","comments":false,"path":"categories/index.html","permalink":"http://NIceBlueChai.cn/categories/index.html","excerpt":"","text":""},{"title":"All tags","date":"2018-02-23T14:13:12.000Z","updated":"2018-02-24T07:36:59.451Z","comments":false,"path":"tags/index.html","permalink":"http://NIceBlueChai.cn/tags/index.html","excerpt":"","text":""},{"title":"photo","date":"2018-02-24T07:47:46.000Z","updated":"2018-04-14T16:03:53.754Z","comments":true,"path":"photo/index.html","permalink":"http://NIceBlueChai.cn/photo/index.html","excerpt":"","text":""},{"title":"All tags","date":"2018-02-23T14:13:12.000Z","updated":"2018-02-23T14:15:29.649Z","comments":true,"path":"tags/随笔/index.html","permalink":"http://NIceBlueChai.cn/tags/随笔/index.html","excerpt":"","text":""}],"posts":[{"title":"在Windows-Server上搭建Web服务器","slug":"在Windows-Sever-上搭建Web服务器","date":"2018-04-11T09:14:15.083Z","updated":"2018-04-11T09:18:36.631Z","comments":true,"path":"在Windows-Sever-上搭建Web服务器.html","link":"","permalink":"http://NIceBlueChai.cn/在Windows-Sever-上搭建Web服务器.html","excerpt":"","text":"两种方法： 安装IIS 安装Apache 安装IIS作为web服务器要求 安装WindowsSever系统（可使用虚拟机，要开启NAT服务） 将IP地址设置为静态的 计算机可以访问Internet+开放80端口，可用cmd命令netstat -an查看 注意：虚拟机上本地链接中网关要与虚拟机编辑-&gt;NAT服务中一致 在WindowsSever上安装IIS服务器管理 -&gt; 添加角色，按步骤安装安装后应有以下服务启动 打开后有一个默认网站 安装DNS服务，搭建DNS服务器添加正向查找区域访问时将本地连接属性中IPv4属性的DNS该为DNS服务器的ipv4地址使用域名访问时便可以解析到指定IP地址 限制网站宽带和连接数量一个服务器上可以放许多网站，而服务器的带宽是一定的为了保证服务器的性能与正常工作、每个网站的正常访问、每个用户的体验，需要对每个网站的带宽和网站并发连接数进行限制 右击 管理网站 高级设置 网站重定向简单的说，自动跳转网站与网页都可以重定向可以重定向到其他网站，也可以重定向到本站的其他页面和文件 定向到media 定向到百度 网站访问日志每次访问网站都会在日志中记录，可以在选项中选择记录项，记录的日志默认保存在…\\inetpub\\logs\\LogFiles目录下 网站标识可在一个服务器上创建多个网站，区分他们的方法，使用网站标识： web服务器网卡绑定多的IP地址，每个网站使用不同的IP地址，太奢侈，因为公网IP资源紧张，不采用此方法 通过端口访问不同的网站，80端口为默认端口 绑定域名，通过域名访问网站 配置网站支持文件下载仅需要80端口在网站物理目录下新建一个media文件夹，放一些东西，访问该目录 要访问文件需要开启目录浏览 再次访问 要想让别人下载各种拓展名（格式）的文件需要配置MIME类型 保持会话连接网站使用TCP协议，每次连接建立会话需要三次握手，为了提高效率，一次建立会话后连接保持一定时间，不许要每次请求都进行三次握手浪费时间，访问量较大时保持连接很耗费服务器性能，取消连接超时则耗费带宽，根据情况选择。 MC地址与ARP欺骗网络执法官（控制本网段计算机的通信）、P2P终结者（控制本网段计算机上网带宽）这两个（流氓）软件通过arp欺骗进行“上网管理”，还可以通过arp欺骗捕获本网段计算机的账号密码，arp协议已在IPv6中停用 判断是否被arp欺骗当网络连接正常，但无法上网，而同网段其他计算机可以上网，可能是计算机受到攻击中病毒了，可通过命令行cmd查看arp -a,对比同网段其他计算机DNS缓存的MC地址，若不一样就是被ARP欺骗了。 解决方法 可通过命令行指令arp -s [ip] [mc]来设置dns服务器mc地址 可以通过修复网卡（修复网络连接）清除缓存的MC地址 注：只有使用IPv4协议并且使用**自动获取IP、自动获取DNS的计算机会遭到ARP欺骗❤️","categories":[{"name":"服务器","slug":"服务器","permalink":"http://NIceBlueChai.cn/categories/服务器/"},{"name":"Web服务器","slug":"服务器/Web服务器","permalink":"http://NIceBlueChai.cn/categories/服务器/Web服务器/"}],"tags":[{"name":"Windows-Server","slug":"Windows-Server","permalink":"http://NIceBlueChai.cn/tags/Windows-Server/"},{"name":"搭建Web服务器","slug":"搭建Web服务器","permalink":"http://NIceBlueChai.cn/tags/搭建Web服务器/"},{"name":"服务器","slug":"服务器","permalink":"http://NIceBlueChai.cn/tags/服务器/"}]},{"title":"Qt-QLabe显示文字和图片","slug":"Qt-QLabe显示文字和图片","date":"2018-04-10T13:23:41.643Z","updated":"2018-04-10T13:58:14.404Z","comments":true,"path":"Qt-QLabe显示文字和图片.html","link":"","permalink":"http://NIceBlueChai.cn/Qt-QLabe显示文字和图片.html","excerpt":"","text":"QLabe Class参考文档 文字与图片的显示格式实际上是用Qt StyleSheet（样式表）设置的与css样式中的差不多 对齐方式 是否换行 设置边框 显示LOGO(显示图片) 添加图片资源 添加一个Labe用来显示图片 ❤️","categories":[{"name":"Qt","slug":"Qt","permalink":"http://NIceBlueChai.cn/categories/Qt/"}],"tags":[{"name":"Qt","slug":"Qt","permalink":"http://NIceBlueChai.cn/tags/Qt/"},{"name":"QLabe","slug":"QLabe","permalink":"http://NIceBlueChai.cn/tags/QLabe/"}]},{"title":"定时器Timer","slug":"定时器Timer","date":"2018-04-10T07:42:27.200Z","updated":"2018-04-10T13:59:29.874Z","comments":true,"path":"定时器Timer.html","link":"","permalink":"http://NIceBlueChai.cn/定时器Timer.html","excerpt":"","text":"定时器用于实现定时操作，如： 每三分钟保存一次 每500毫秒闪烁一次 每1秒刷新一次界面 新建Timer (1) 重写timeEvent()函数virtual void timerEvent ( QTimerEvent * event );123456789// 定时器处理函数void Test8_2A::timerEvent ( QTimerEvent * event )&#123;// 可以有多个定时器，每个的定时器有不同的处理 if(event‐&gt;timerId() == m_timerId) &#123; &#125;&#125; (2) 启动定时器，指定时间间隔m_timerId=startTime(500); 例子：实现一个文字时钟，显示系统当前时间 1234567891011121314151617Timer_Event::Timer_Event(QWidget *parent) : QMainWindow(parent)&#123; ui.setupUi(this); m_timerId = startTimer(1000);&#125;void Timer_Event::timerEvent(QTimerEvent *event)&#123; if (event-&gt;timerId()==m_timerId) &#123; QTime now = QTime::currentTime(); QString text = now.toString(&quot;HH:mm:ss ap&quot;); ui.labelTime-&gt;setText(text); &#125; &#125; ❤️","categories":[{"name":"Qt","slug":"Qt","permalink":"http://NIceBlueChai.cn/categories/Qt/"}],"tags":[{"name":"Qt","slug":"Qt","permalink":"http://NIceBlueChai.cn/tags/Qt/"},{"name":"Timer","slug":"Timer","permalink":"http://NIceBlueChai.cn/tags/Timer/"},{"name":"定时器","slug":"定时器","permalink":"http://NIceBlueChai.cn/tags/定时器/"}]},{"title":"Qt-使用工作线程","slug":"使用工作线程","date":"2018-04-10T07:42:27.198Z","updated":"2018-04-10T13:59:42.299Z","comments":true,"path":"使用工作线程.html","link":"","permalink":"http://NIceBlueChai.cn/使用工作线程.html","excerpt":"","text":"comments: false&gt;在Qt里，线程相关的类： QThread 线程 QMutex 互斥锁QSemaphore 信号量 “工作线程”:就是一个普通的线程,区别于”界面线程”当一个事件处理可能需要较长时间,就创建一个工作线程处理它,以避免界面卡死. 步骤:(1) 启动一个工作线程(2) 显示一个进度条或对等待话框(3) 启动一个定时器,定时查询工作线程的进度和状态,在其完成之后,填满进度条、结束等待. 创建线程派生一个线程类12345678class MyThread : public QThread&#123;Q_OBJECTpublic:MyThread(QObject *parent);~MyThread();void run(); // 线程的入口函数&#125;; 添加一些成员函数，用于查询任务的状态和进度 :状态：int GetStatus();已完成(1)正在进行(0)发生错误，已终止(‐1)进度：int GetProgress();0‐100 启动线程12MyTask* m_task = new MyTask();m_task‐&gt;start(); 回收线程1m_task-&gt;wait();","categories":[{"name":"Qt","slug":"Qt","permalink":"http://NIceBlueChai.cn/categories/Qt/"}],"tags":[{"name":"Qt","slug":"Qt","permalink":"http://NIceBlueChai.cn/tags/Qt/"},{"name":"线程","slug":"线程","permalink":"http://NIceBlueChai.cn/tags/线程/"},{"name":"工作线程","slug":"工作线程","permalink":"http://NIceBlueChai.cn/tags/工作线程/"}]},{"title":"Qt的信号和槽","slug":"Qt的信号和槽","date":"2018-04-10T07:42:27.197Z","updated":"2018-04-10T13:10:30.597Z","comments":true,"path":"Qt的信号和槽.html","link":"","permalink":"http://NIceBlueChai.cn/Qt的信号和槽.html","excerpt":"","text":"信号和槽是Qt特有的信息传输驱动机制，是Qt程序设计中的重要基础，它可以让程序员在互不相干的对象之间建立联系。 槽本质上是类的成员函数，其参数可以是任意类型，它与普通的C++成员函数几乎没有区别，它可以是虚函数；也可以被重载函数；可以是公有的、保护的或私有的，也可以被其它C++成员函数调用，和普通的类成员函数唯一不同的是：槽还可以和信号连接在一起，每当和槽连接的信号被发射时，就会自动调用这个槽。 connect()语法形式如下：connect(sender,SIGNAL(signal),receiver,SLOT(slot));这里的sender是发送信号的对象的指针，receiver是包含槽的对象的指针，signal是被发送的信号，slot是接受信号的槽，他们都是不带参数的函数名。SIGNAL()宏和SLOT()宏会把他们的参数转换成相应的字符串。对于信号和槽，还具有以下特点。 1.一个信号可以连接多个槽12connect(sender,SIGNAL(signal),receiver,SLOT(slotA));connect(sender,SIGNAL(signal),receiver,SLOT(slotB)); 当这一信号发射时，会以不确定的顺序一个接一个的调用这个信号连接的所有槽 2.多个信号可以连接同一个槽12connect(sender,SIGNAL(signalA),receiver,SLOT(slot));connect(sender,SIGNAL(signalB),receiver,SLOT(slot)); 无论哪个信号被发射，这个槽都会被调用 3.一个信号可以连接另外一个信号1connect(sender,SIGNAL(signalA),receiver,SIGNAL(signalB)); 当信号A发射时，也会发射与它相连的信号B ４.信号、槽之间的连接可以被移除1disconnect(sender,SIGNAL(signal),receiver,SLOT(slot)); 因为删除对象时，Qt会自动移除和这个对象相关的所有连接，所以这个语法很少用到。 除此之外，要把信号成功连接到槽（或者连接到另一个信号），还应该注意，相连接的信号和槽必须具有相同顺序相同类型的参数，如果信号的参数比它所连接的槽的参数多，那么多余的参数将被简单的忽略掉。例如：12connect(sender,SIGNAL(rawCommandReply(int,const QString &amp;)),receiver,SIGNAL(processReply(int , const QString &amp;))); 如果参数类型不匹配，或者信号或槽不存在，尽管应用程序调试构建可能会通过，但Qt会在运行时发出警告。如果信号和槽的名字中包含了参数名，也会发生错误警告 实际上这种机制是在QObject中实现的，这表明信号和槽并不仅仅局限于GUI编程中，实际上这种机制可以用于任何QObject的子类中， 在普通的类中使用信号和槽机制123456789101112131415161718192021Class Circle:public QObject&#123; Q_ONJECT public: Circle()&#123;CircleRadius=0;&#125; int Radius()&#123;return CircleRadius;&#125; public slots: void setRadius(int newRadius); signals: void radiusChanged(int newRadius); private: int circleRadius;&#125;;void Circle::setRadius(int newRadius)&#123; if(newRadius!=circleRadius) &#123; circleRadius=newRadius; emit radiusChanged(circleRadius); &#125;&#125; 来看一下，setRadius()槽是如何工作的。仔细阅读会发现只有在newRadius不等于circleRadius的时候，才会发射radiusChanged()信号。这样既可以确保信号和槽连接又不会导致无限循环。 ❤️我的目标是：someday，即便你花钱看我的文章，也会觉得心满意足","categories":[{"name":"Qt","slug":"Qt","permalink":"http://NIceBlueChai.cn/categories/Qt/"}],"tags":[{"name":"Qt","slug":"Qt","permalink":"http://NIceBlueChai.cn/tags/Qt/"},{"name":"信号和槽","slug":"信号和槽","permalink":"http://NIceBlueChai.cn/tags/信号和槽/"}]},{"title":"Qt-非模式对话框","slug":"Qt-非模式对话框","date":"2018-04-10T07:42:27.195Z","updated":"2018-04-10T13:14:11.492Z","comments":true,"path":"Qt-非模式对话框.html","link":"","permalink":"http://NIceBlueChai.cn/Qt-非模式对话框.html","excerpt":"","text":"应用实例:搜索框创建一个Widget对象，作为主窗体的成员变量SearchWindow* m_SearchWin;12m_SearchWin=new SearchWindow(this);m_SearchWin-&gt;setWindowFlags(Qt::Window); 在用户执行搜索菜单时显示此窗口12345int Text_7_4A::ShowSearch() &#123; m_searchWin-&gt;show(); return 0;&#125; 在搜索窗口内有动作时，在主窗口中相应此动作需要将搜索类的ui成员变为public类型12//响应小窗口内的动作 connect(m_searchWin-&gt;ui.btnStartSearch, SIGNAL(clicked()), this, SLOT(OnStartSearch()) ); //响应小窗口内的动作 connect(m_searchWin-&gt;ui.btnStartSearch, SIGNAL(clicked()), this, SLOT(OnStartSearch()) ); 笔芯❤️","categories":[{"name":"Qt","slug":"Qt","permalink":"http://NIceBlueChai.cn/categories/Qt/"}],"tags":[{"name":"Qt","slug":"Qt","permalink":"http://NIceBlueChai.cn/tags/Qt/"},{"name":"对话框","slug":"对话框","permalink":"http://NIceBlueChai.cn/tags/对话框/"},{"name":"非模式对话框","slug":"非模式对话框","permalink":"http://NIceBlueChai.cn/tags/非模式对话框/"}]},{"title":"Qt-模式对话框","slug":"Qt-模式对话框","date":"2018-04-10T07:42:27.193Z","updated":"2018-04-10T13:20:12.660Z","comments":true,"path":"Qt-模式对话框.html","link":"","permalink":"http://NIceBlueChai.cn/Qt-模式对话框.html","excerpt":"","text":"QDialog类参考 对话框：用于提示用户输入 ####对话框分两种： （1）模式对话框Modal背景界面卡住，用户必须完成对话框输入，关闭对话框之后，才能回到背景界面 （2）非模式对话框Non‐Modal背景界面可以活动。 任务：点登录按钮，弹出对话框提示用户输入。用户点“确认”或“取消”后，回到主界面。 (1)新建对话框，布局(2)点确定时，accept() 对话框返回点取消时，reject()对话框返回12345678910111213int LoginDlg::OnbtnOK() &#123; //取得用户的输入 m_user = ui.TextUser-&gt;text(); m_password = ui.TextPassword-&gt;text(); accept();//关闭对话框，并返回Accepted return 0;&#125;int LoginDlg::OnbtnCancel() &#123; //用户取消 reject(); return 0;&#125; (3) 运行对话框 exec()，注意exec()的返回值(4) 取得用户输入123456789101112int QtLog_01::OnbtnOK_1() &#123; //使用对话框 LoginDlg dlg; int ret=dlg.exec();//对话框显示，程序阻塞 if (ret == QDialog::Accepted) &#123; qDebug()&lt;&lt; dlg.m_user &lt;&lt; dlg.m_password;//调试输出 &#125; else &#123; &#125; return 0;&#125; 源码下载 ❤️","categories":[{"name":"Qt","slug":"Qt","permalink":"http://NIceBlueChai.cn/categories/Qt/"}],"tags":[{"name":"Qt","slug":"Qt","permalink":"http://NIceBlueChai.cn/tags/Qt/"},{"name":"对话框","slug":"对话框","permalink":"http://NIceBlueChai.cn/tags/对话框/"},{"name":"模式对话框","slug":"模式对话框","permalink":"http://NIceBlueChai.cn/tags/模式对话框/"}]},{"title":"Qt-文件对话框","slug":"Qt-文件对话框","date":"2018-04-10T07:42:27.192Z","updated":"2018-04-10T13:59:17.657Z","comments":true,"path":"Qt-文件对话框.html","link":"","permalink":"http://NIceBlueChai.cn/Qt-文件对话框.html","excerpt":"","text":"QFileDialog类参考 选择打开文件12345678910111213141516171819202122232425262728293031323334353637int QtFile_01::OnClickbtnOpen() &#123; //选择要打开的文件 QString fileName = QFileDialog::getOpenFileName(this, GBK::ToUnicode(&quot;Open File打开文件&quot;),//标题 &quot;&quot;, tr(&quot;(*)&quot;));//限制文件类型 //为空时表明用户取消了操作 if (fileName.length() &gt; 0) &#123; qDebug() &lt;&lt; fileName; //Unicode(QString) -&gt; GBK(string) string gbk_name = GBK::FromUnicode(fileName); //打开文件,读取内容 FILE* fp; fopen_s(&amp;fp, gbk_name.c_str(), &quot;rb&quot;); //获取文件大小 fseek(fp, 0, SEEK_END); int filesize = ftell(fp); //读取内容 fseek(fp, 0, SEEK_SET); char* buf = new char[filesize + 1]; int n = fread(buf,1, filesize, fp); if (n &gt; 0) &#123; buf[n] = 0; //显示文本 ui.plainTextEdit-&gt;setPlainText(GBK::ToUnicode(buf)); &#125; //释放内存，关闭界面 delete[]buf; fclose(fp); &#125; return 0;&#125; 保存文件123456789101112131415161718192021222324252627int QtFile_01::OnClickbtnSave() &#123; //选择要保存的位置 QString fileName = QFileDialog::getSaveFileName(this, //父窗口 GBK::ToUnicode(&quot;保存文件&quot;), &quot;/&quot;); //若为空表明用户取消了操作 if (fileName.length() &gt; 0) &#123; //获取文本框中的内容 QString text = ui.plainTextEdit-&gt;toPlainText(); //Unicode(QString) -&gt; GBK(string) string gbk_name = GBK::FromUnicode(fileName); string gbk_text = GBK::FromUnicode(text); //打开文件 FILE* fp; fopen_s(&amp;fp, gbk_name.c_str(), &quot;wb&quot;); //写入文件 fwrite(gbk_text.c_str(), 1, gbk_text.length(), fp); //关闭文件 fclose(fp); &#125; return 0;&#125; 文中ToUnicode()及FromUnicode均为封装好的函数，详见VC下字符编码转换","categories":[{"name":"Qt","slug":"Qt","permalink":"http://NIceBlueChai.cn/categories/Qt/"}],"tags":[{"name":"Qt","slug":"Qt","permalink":"http://NIceBlueChai.cn/tags/Qt/"},{"name":"对话框","slug":"对话框","permalink":"http://NIceBlueChai.cn/tags/对话框/"},{"name":"文件对话框","slug":"文件对话框","permalink":"http://NIceBlueChai.cn/tags/文件对话框/"}]},{"title":"Qt-QLabe显示文字和图片","slug":"Qt-QLabeshowtextandimages","date":"2018-04-10T07:42:27.190Z","updated":"2018-04-10T13:56:27.080Z","comments":true,"path":"Qt-QLabeshowtextandimages.html","link":"","permalink":"http://NIceBlueChai.cn/Qt-QLabeshowtextandimages.html","excerpt":"","text":"QLabe Class参考文档 文字与图片的显示格式实际上是用Qt StyleSheet（样式表）设置的与css样式中的差不多 对齐方式 是否换行 设置边框 显示LOGO(显示图片) 添加图片资源 添加一个Labe用来显示图片 ❤️","categories":[{"name":"Qt","slug":"Qt","permalink":"http://NIceBlueChai.cn/categories/Qt/"}],"tags":[{"name":"Qt","slug":"Qt","permalink":"http://NIceBlueChai.cn/tags/Qt/"},{"name":"QLabe","slug":"QLabe","permalink":"http://NIceBlueChai.cn/tags/QLabe/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-04-10T07:40:40.999Z","updated":"2018-04-07T07:19:19.480Z","comments":false,"path":"hello-world.html","link":"","permalink":"http://NIceBlueChai.cn/hello-world.html","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://nicebluechai.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus. (function(){ var appid = 'cytu1mJqc'; var conf = 'prod_724639f82a7493e5cc3377fc5c98c32b'; var width = window.innerWidth || document.documentElement.clientWidth; if (width < 960) { window.document.write(''); } else { var loadJs=function(d,a){var c=document.getElementsByTagName(\"head\")[0]||document.head||document.documentElement;var b=document.createElement(\"script\");b.setAttribute(\"type\",\"text/javascript\");b.setAttribute(\"charset\",\"UTF-8\");b.setAttribute(\"src\",d);if(typeof a===\"function\"){if(window.attachEvent){b.onreadystatechange=function(){var e=b.readyState;if(e===\"loaded\"||e===\"complete\"){b.onreadystatechange=null;a()}}}else{b.onload=a}}c.appendChild(b)};loadJs(\"http://changyan.sohu.com/upload/changyan.js\",function(){window.changyan.api.config({appid:appid,conf:conf})}); } })();","categories":[{"name":"第一篇","slug":"第一篇","permalink":"http://NIceBlueChai.cn/categories/第一篇/"},{"name":"Test","slug":"第一篇/Test","permalink":"http://NIceBlueChai.cn/categories/第一篇/Test/"}],"tags":[{"name":"英文","slug":"英文","permalink":"http://NIceBlueChai.cn/tags/英文/"}]}]}